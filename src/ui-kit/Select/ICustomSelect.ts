export interface ICustomSelect {
  /**
   * Список всех вариантов. Массив строк.
   */
  options: string[];

  /**
   * Выбранный вариант. В родительском компоненте использовать state. Инициировать нулевым элементом массива. Если нужно показать плэйсхолдер, то инициализировать -1
   */
  currentOption: string;

  /**
   * Функция для выбора варианта из списка. Сюда просто передать setState.
   */
  setCurrentOption: (variant: string) => void;

  /**
   * Текст-подсказка (не является значением)
   */
  placeholder?: string;

  /**
   * Словарь для перевода значений
   */
  dictionary?: { [key: string]: string };

  /**
   * Цвет текста-подсказки
   */
  placeholderColor?: string;

  /**
   * Ширина всего элемента и его содержимого
   */
  width?: string;

  /**
   * Граница самого селекта
   */
  borderStyle?: 'solid' | 'dotted' | 'dashed' | 'double' | 'none';

  /**
   * Толщина границы селекта. Требует выбранный borderStyle!
   */
  borderWidth?: string;

  /**
   * Цвет границы селекта. Требует выбранный borderStyle!
   */
  borderColor?: string;

  /**
   * Минимальная высота селекта
   */
  minHeight?: string;

  /**
   * Тень селекта
   */
  boxShadow?: string;

  /**
   * Тень элемента при наведении
   */
  boxShadowHover?: string | 'none';

  /**
   * Тень дочернего (выплывающего) списка элементов
   */
  optionsShadow?: string;

  /**
   * Признак того, что форму пытались отправить. Нужно размещать в родительском компоненте в обработчике Submit и после того, как он был вызван, менять значение на true. Становится обязательным при использовании параметра required
   */
  isAttemptFormSubmit?: boolean;

  /**
   * Цвет обводки при ошибке (например, если обязательно нужно выбрать значение)
   */
  errorColor?: string;

  /**
   * Цвет обводки, когда сам элемент или его опция в фокусе
   */
  focusColor?: string;

  /**
   * Обязательно-ли выбрать вариант. Если этот параметр используется, также обязательно настроить и isAttemptFormSubmit
   */
  required?: boolean;

  /**
   * Дополнительные классы, которые можно передать снаружи. Удобно использовать для любых стилизаций, не имеющих прямого отношения к компоненту. Например, внешние отступы.
   */
  classes?: string;
}
